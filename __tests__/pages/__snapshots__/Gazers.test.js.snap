// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Gazers /> renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "marginTop": 0,
      },
      Object {
        "backgroundColor": "#1f2937",
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "justifyContent": "space-between",
        "paddingTop": 28,
        "width": "100%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 6,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 12,
          "paddingBottom": 4,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 4,
          "width": "100%",
        },
      ]
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": "auto",
        }
      }
    >
      <View
        accessible={true}
        activeOpacity={1}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 6,
            "display": "flex",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#374151",
              "borderRadius": 6,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            }
          }
          testID="BackButton"
        >
          <Text />
        </View>
      </View>
    </View>
    <Text
      style={
        Object {
          "color": "gray",
          "fontSize": 20,
        }
      }
      testID="barText"
    >
      loremIpsum
    </Text>
    <View
      collapsable={false}
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": "auto",
        }
      }
    >
      <View
        accessible={true}
        activeOpacity={1}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 6,
            "display": "flex",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#374151",
              "borderRadius": 6,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            }
          }
          testID="GearButton"
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={[Function]}
    data={
      Array [
        Object {
          "avatar_url": null,
          "id": 1,
          "login": "lorem",
        },
        Object {
          "avatar_url": null,
          "id": 2,
          "login": "lorem",
        },
        Object {
          "avatar_url": null,
          "id": 3,
          "login": "lorem",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "paddingLeft": 20,
        "paddingRight": 20,
        "width": "100%",
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#374151",
              "borderRadius": 6,
              "display": "flex",
              "flexDirection": "row",
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": null,
              }
            }
            style={
              Object {
                "aspectRatio": 1,
                "borderRadius": 9999,
              }
            }
          />
          <Text
            style={
              Object {
                "color": "gray",
                "fontSize": 22,
                "marginLeft": 15,
              }
            }
          >
            lorem
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#374151",
              "borderRadius": 6,
              "display": "flex",
              "flexDirection": "row",
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": null,
              }
            }
            style={
              Object {
                "aspectRatio": 1,
                "borderRadius": 9999,
              }
            }
          />
          <Text
            style={
              Object {
                "color": "gray",
                "fontSize": 22,
                "marginLeft": 15,
              }
            }
          >
            lorem
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#374151",
              "borderRadius": 6,
              "display": "flex",
              "flexDirection": "row",
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": null,
              }
            }
            style={
              Object {
                "aspectRatio": 1,
                "borderRadius": 9999,
              }
            }
          />
          <Text
            style={
              Object {
                "color": "gray",
                "fontSize": 22,
                "marginLeft": 15,
              }
            }
          >
            lorem
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "backgroundColor": "#374151",
              "borderRadius": 6,
              "display": "flex",
              "flexDirection": "row",
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Object {
                "aspectRatio": 1,
                "borderRadius": 9999,
              }
            }
          />
          <Text
            style={
              Object {
                "color": "gray",
                "fontSize": 22,
                "marginLeft": 15,
              }
            }
          >
            loading more...
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
